{
  "keymap": {
    "/task": {
      "description": "Execute intelligent task workflow - analyze progress, complete next actionable task, sync state",
      "command": "user:task"
    },
    "/sync": {
      "description": "Synchronize project state and analyze current progress across all systems",
      "command": "user:sync"
    },
    "/architect": {
      "description": "Complete CRCT/HDTA project scaffolding with populated templates",
      "command": "user:architect"
    },
    "/branch": {
      "description": "Create development branch with success criteria and timeline tracking",
      "command": "user:branch"
    },
    "/parse": {
      "description": "Parse branch requirements and generate actionable tasks.json",
      "command": "user:parse"
    },
    "/init": {
      "description": "Initialize AI agent integration with taskmaster and strategic context",
      "command": "user:init"
    },
    "/web-eval": {
      "description": "Comprehensive web application evaluation and UX analysis",
      "command": "mcp__web-eval-agent__web_eval_agent"
    },
    "/monitor": {
      "description": "Real-time backend monitoring and API debugging",
      "command": "bash"
    },
    "/test": {
      "description": "Run TypeScript validation and test suite",
      "command": "bash",
      "args": ["npm", "run", "check", "&&", "npm", "test"]
    },
    "/build": {
      "description": "Production build with Vite",
      "command": "bash",
      "args": ["npm", "run", "build"]
    },
    "/dev": {
      "description": "Start unified development server (backend + frontend on port 5000)",
      "command": "bash",
      "args": ["npm", "run", "dev"]
    },
    "/frontend": {
      "description": "Start Vite frontend dev server on port 3000",
      "command": "bash",
      "args": ["npm", "run", "frontend"]
    },
    "/electron": {
      "description": "Start desktop app development mode",
      "command": "bash",
      "args": ["npm", "run", "electron-dev"]
    }
  },
  "project": {
    "name": "FitForge",
    "description": "Real Data-Driven Fitness Ecosystem with AI-powered progressive overload",
    "version": "1.0.0",
    "type": "fitness-app",
    "tech_stack": ["TypeScript", "React", "Node.js", "Supabase", "Radix UI", "Tailwind CSS"],
    "architecture": "real-data-driven",
    "development_principles": [
      "Database schema first",
      "No mock data policy", 
      "Formula transparency",
      "TypeScript full coverage",
      "Real user input only"
    ]
  },
  "development": {
    "port": 5000,
    "wsl_ip_required": true,
    "unified_server": true,
    "test_command": "npm run check",
    "build_command": "npm run build",
    "data_architecture": "excel-like-structured"
  },
  "memory_bank": {
    "system_manifest": "memory-bank/system_manifest_fitforge.md",
    "current_focus": "next_development_initiative",
    "active_issues": [],
    "completed_issues": ["GitHub Issue #26 - Auto-populate body weight", "GitHub Issue #27 - Storage Architecture Mismatch"],
    "roadmap": "memory-bank/project_roadmap_fitforge.md",
    "last_sync": "2025-06-03T23:00:00Z"
  }
}